{"ast":null,"code":"import axios from 'axios';\nexport const api = axios.create({\n  baseURL: 'http://localhost:3000',\n  timeout: 10000\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async loginData => {\n    var _response$data$data;\n    const response = await api.post('/auth/login', loginData, {\n      headers: {\n        'Content-Type': 'application/json' // Explicitly set content type\n      }\n    });\n    console.log('RESPONSE', response.data.data);\n    if ((_response$data$data = response.data.data) !== null && _response$data$data !== void 0 && _response$data$data.token) {\n      localStorage.setItem('token', response.data.data.token);\n    }\n    return response.data;\n  },\n  register: async registerData => {\n    var _response$data$data2;\n    const response = await api.post('/auth/register', registerData);\n    if ((_response$data$data2 = response.data.data) !== null && _response$data$data2 !== void 0 && _response$data$data2.token) {\n      localStorage.setItem('token', response.data.data.token);\n    }\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n  },\n  isAuthenticated: () => !!localStorage.getItem('token'),\n  getToken: () => localStorage.getItem('token')\n};","map":{"version":3,"names":["axios","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","loginData","_response$data$data","post","console","log","data","setItem","register","registerData","_response$data$data2","getProfile","get","logout","defaults","common","isAuthenticated","getToken"],"sources":["C:/Users/sekne/OneDrive/Desktop/Veterinary-Clinic/services/front-end/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User, LoginData, RegisterData } from '../models/User';\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'http://localhost:3000',\r\n  timeout: 10000,\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport interface AuthResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: {\r\n    user: User;\r\n    token: string;\r\n  };\r\n}\r\n\r\nexport const authService = {\r\n  login: async (loginData: LoginData): Promise<AuthResponse> => {\r\n     const response = await api.post<AuthResponse>('/auth/login', loginData, {\r\n      headers: {\r\n        'Content-Type': 'application/json', // Explicitly set content type\r\n      },\r\n    });\r\n    console.log('RESPONSE', response.data.data)\r\n    if (response.data.data?.token) {\r\n      localStorage.setItem('token', response.data.data.token);\r\n    }\r\n\r\n    return response.data;\r\n  },\r\n\r\n  register: async (registerData: RegisterData): Promise<AuthResponse> => {\r\n    const response = await api.post<AuthResponse>('/auth/register', registerData);\r\n\r\n    if (response.data.data?.token) {\r\n      localStorage.setItem('token', response.data.data.token);\r\n    }\r\n\r\n    return response.data;\r\n  },\r\n\r\n  getProfile: async (): Promise<{ success: boolean; data: { user: User } }> => {\r\n    const response = await api.get<{ success: boolean; data: { user: User } }>('/auth/profile');\r\n    return response.data;\r\n  },\r\n\r\n  logout: (): void => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n  },\r\n\r\n  isAuthenticated: (): boolean => !!localStorage.getItem('token'),\r\n\r\n  getToken: (): string | null => localStorage.getItem('token'),\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}