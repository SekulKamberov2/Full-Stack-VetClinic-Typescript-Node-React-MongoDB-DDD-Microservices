{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { api } from '../services/authService';\nconst initialState = {\n  clients: [],\n  loading: false,\n  error: null\n};\nexport const fetchClients = createAsyncThunk('clients/fetchAll', async (_, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    const token = getState().auth.token || localStorage.getItem('token');\n    const res = await api.get('/clients', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log('clients', res.data.data);\n    return res.data.data;\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load clients');\n  }\n});\nconst clientsSlice = createSlice({\n  name: 'clients',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchClients.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchClients.fulfilled, (state, action) => {\n      state.loading = false;\n      state.clients = action.payload;\n    }).addCase(fetchClients.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload || 'Failed to fetch clients';\n    });\n  }\n});\nexport default clientsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","initialState","clients","loading","error","fetchClients","_","rejectWithValue","getState","token","auth","localStorage","getItem","res","get","headers","Authorization","console","log","data","err","_err$response","_err$response$data","response","message","clientsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/sekne/OneDrive/Desktop/Veterinary-Clinic/services/front-end/src/store/clientsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { api } from '../services/authService';\r\nimport { Client } from '../models/Client';\r\nimport { RootState } from '.';\r\n\r\ninterface ClientsState {\r\n  clients: Client[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: ClientsState = {\r\n  clients: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const fetchClients = createAsyncThunk<Client[], void, { state: RootState }>(\r\n  'clients/fetchAll',\r\n  async (_, { rejectWithValue, getState }) => {\r\n    try {\r\n      const token = getState().auth.token || localStorage.getItem('token');\r\n      const res = await api.get<{ success: boolean; data: Client[] }>('/clients', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      console.log('clients', res.data.data);\r\n      return res.data.data;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.response?.data?.message || 'Failed to load clients');\r\n    }\r\n  }\r\n);\r\n\r\nconst clientsSlice = createSlice({\r\n  name: 'clients',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchClients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchClients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.clients = action.payload;\r\n      })\r\n      .addCase(fetchClients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = (action.payload as string) || 'Failed to fetch clients';\r\n      });\r\n  },\r\n});\r\n\r\nexport default clientsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,GAAG,QAAQ,yBAAyB;AAU7C,MAAMC,YAA0B,GAAG;EACjCC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CAC1C,kBAAkB,EAClB,OAAOO,CAAC,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK,IAAIE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACpE,MAAMC,GAAG,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAuC,UAAU,EAAE;MAC1EC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUP,KAAK;MAChC;IACF,CAAC,CAAC;IAEFQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,GAAG,CAACM,IAAI,CAACA,IAAI,CAAC;IACrC,OAAON,GAAG,CAACM,IAAI,CAACA,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAQ,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACjB,OAAOf,eAAe,CAAC,EAAAc,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,wBAAwB,CAAC;EACjF;AACF,CACF,CAAC;AAED,MAAMC,YAAY,GAAG3B,WAAW,CAAC;EAC/B4B,IAAI,EAAE,SAAS;EACfzB,YAAY;EACZ0B,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACzB,YAAY,CAAC0B,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAAC7B,OAAO,GAAG,IAAI;MACpB6B,KAAK,CAAC5B,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACD0B,OAAO,CAACzB,YAAY,CAAC4B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAAC7B,OAAO,GAAG,KAAK;MACrB6B,KAAK,CAAC9B,OAAO,GAAGgC,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAACzB,YAAY,CAAC+B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAAC7B,OAAO,GAAG,KAAK;MACrB6B,KAAK,CAAC5B,KAAK,GAAI8B,MAAM,CAACC,OAAO,IAAe,yBAAyB;IACvE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeV,YAAY,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}