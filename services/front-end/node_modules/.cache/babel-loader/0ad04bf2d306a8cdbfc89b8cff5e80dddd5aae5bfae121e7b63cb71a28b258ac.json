{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authService } from '../services/authService';\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\n\n// Login thunk\nexport const loginUser = createAsyncThunk('auth/login', async (loginData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.login(loginData);\n    return response.data;\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n  }\n});\n\n// Register thunk\nexport const registerUser = createAsyncThunk('auth/register', async (registerData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.register(registerData);\n    return response.data;\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n  }\n});\n\n// Fetch profile thunk\nexport const fetchUserProfile = createAsyncThunk('auth/profile', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.getProfile();\n    return response.data.user;\n  } catch (err) {\n    return rejectWithValue('Failed to fetch profile');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n      authService.logout();\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n    }).addCase(loginUser.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = (_action$payload = action.payload) !== null && _action$payload !== void 0 ? _action$payload : 'Login failed';\n    })\n    // Register\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n    }).addCase(registerUser.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = (_action$payload2 = action.payload) !== null && _action$payload2 !== void 0 ? _action$payload2 : 'Registration failed';\n    })\n    // Profile\n    .addCase(fetchUserProfile.pending, state => {\n      state.loading = true;\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      var _action$payload3;\n      state.loading = false;\n      state.error = (_action$payload3 = action.payload) !== null && _action$payload3 !== void 0 ? _action$payload3 : 'Failed to fetch profile';\n      state.token = null;\n      state.isAuthenticated = false;\n      authService.logout();\n    });\n  }\n});\nexport const {\n  logout,\n  clearError,\n  setUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","loginUser","loginData","rejectWithValue","response","login","data","err","_err$response","_err$response$data","message","registerUser","registerData","register","_err$response2","_err$response2$data","fetchUserProfile","_","getProfile","authSlice","name","reducers","logout","state","clearError","setUser","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$payload","_action$payload2","_action$payload3","actions","reducer"],"sources":["C:/Users/sekne/OneDrive/Desktop/Veterinary-Clinic/services/front-end/src/store/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { User, LoginData, RegisterData } from '../models/User';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: !!localStorage.getItem('token'),\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Login thunk\r\nexport const loginUser = createAsyncThunk<\r\n  { user: User; token: string },\r\n  LoginData,\r\n  { rejectValue: string }\r\n>('auth/login', async (loginData, { rejectWithValue }) => {\r\n  try {\r\n    const response = await authService.login(loginData);\r\n    return response.data;\r\n  } catch (err: any) {\r\n    return rejectWithValue(err.response?.data?.message || 'Login failed');\r\n  }\r\n});\r\n\r\n// Register thunk\r\nexport const registerUser = createAsyncThunk<\r\n  { user: User; token: string },\r\n  RegisterData,\r\n  { rejectValue: string }\r\n>('auth/register', async (registerData, { rejectWithValue }) => {\r\n  try {\r\n    const response = await authService.register(registerData);\r\n    return response.data;\r\n  } catch (err: any) {\r\n    return rejectWithValue(err.response?.data?.message || 'Registration failed');\r\n  }\r\n});\r\n\r\n// Fetch profile thunk\r\nexport const fetchUserProfile = createAsyncThunk<User, void, { rejectValue: string }>(\r\n  'auth/profile',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.getProfile();\r\n      return response.data.user;\r\n    } catch (err) {\r\n      return rejectWithValue('Failed to fetch profile');\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.error = null;\r\n      authService.logout();\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    setUser: (state, action: { payload: User }) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = true;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload ?? 'Login failed';\r\n      })\r\n      // Register\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload ?? 'Registration failed';\r\n      })\r\n      // Profile\r\n      .addCase(fetchUserProfile.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(fetchUserProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload ?? 'Failed to fetch profile';\r\n        state.token = null;\r\n        state.isAuthenticated = false;\r\n        authService.logout();\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout, clearError, setUser } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}