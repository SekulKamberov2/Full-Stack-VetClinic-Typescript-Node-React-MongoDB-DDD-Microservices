{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authService } from '../services/authService';\n// Initialize state from localStorage\nconst initialState = {\n  user: JSON.parse(localStorage.getItem('user') || 'null'),\n  token: authService.getToken(),\n  isAuthenticated: authService.isAuthenticated(),\n  loading: false,\n  error: null\n};\n\n// Login\nexport const loginUser = createAsyncThunk('auth/login', async (loginData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.login(loginData);\n    return response.data;\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n  }\n});\n\n// Register\nexport const registerUser = createAsyncThunk('auth/register', async (registerData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.register(registerData);\n    return response.data;\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n  }\n});\n\n// Fetch profile\nexport const fetchUserProfile = createAsyncThunk('auth/fetchProfile', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.getProfile();\n    return response.data.user;\n  } catch (err) {\n    return rejectWithValue('Failed to fetch profile');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      authService.logout();\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n      localStorage.setItem('user', JSON.stringify(action.payload));\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = typeof action.payload === 'string' ? action.payload : 'Login failed';\n      state.isAuthenticated = false;\n    })\n    // Register\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = typeof action.payload === 'string' ? action.payload : 'Registration failed';\n      state.isAuthenticated = false;\n    })\n    // Fetch profile\n    .addCase(fetchUserProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.isAuthenticated = true;\n      localStorage.setItem('user', JSON.stringify(action.payload));\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = typeof action.payload === 'string' ? action.payload : 'Failed to fetch profile';\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    });\n  }\n});\nexport const {\n  logout,\n  clearError,\n  setUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","initialState","user","JSON","parse","localStorage","getItem","token","getToken","isAuthenticated","loading","error","loginUser","loginData","rejectWithValue","response","login","data","err","_err$response","_err$response$data","message","registerUser","registerData","register","_err$response2","_err$response2$data","fetchUserProfile","_","getProfile","authSlice","name","reducers","logout","state","removeItem","clearError","setUser","action","payload","setItem","stringify","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/sekne/OneDrive/Desktop/Veterinary-Clinic/services/front-end/src/store/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { User, LoginData, RegisterData } from '../models/User';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\n// Initialize state from localStorage\r\nconst initialState: AuthState = {\r\n  user: JSON.parse(localStorage.getItem('user') || 'null'),\r\n  token: authService.getToken(),\r\n  isAuthenticated: authService.isAuthenticated(),\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Login\r\nexport const loginUser = createAsyncThunk<{ user: User; token: string }, LoginData>(\r\n  'auth/login',\r\n  async (loginData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.login(loginData);\r\n      return response.data;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.response?.data?.message || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\n// Register\r\nexport const registerUser = createAsyncThunk<{ user: User; token: string }, RegisterData>(\r\n  'auth/register',\r\n  async (registerData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.register(registerData);\r\n      return response.data;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.response?.data?.message || 'Registration failed');\r\n    }\r\n  }\r\n);\r\n\r\n// Fetch profile\r\nexport const fetchUserProfile = createAsyncThunk<User>(\r\n  'auth/fetchProfile',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.getProfile();\r\n      return response.data.user;\r\n    } catch (err: any) {\r\n      return rejectWithValue('Failed to fetch profile');\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.error = null;\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      authService.logout();\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    setUser: (state, action: { payload: User }) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = true;\r\n      localStorage.setItem('user', JSON.stringify(action.payload));\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(loginUser.pending, (state) => { state.loading = true; state.error = null; })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isAuthenticated = true;\r\n        localStorage.setItem('token', action.payload.token);\r\n        localStorage.setItem('user', JSON.stringify(action.payload.user));\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = typeof action.payload === 'string' ? action.payload : 'Login failed';\r\n        state.isAuthenticated = false;\r\n      })\r\n      // Register\r\n      .addCase(registerUser.pending, (state) => { state.loading = true; state.error = null; })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isAuthenticated = true;\r\n        localStorage.setItem('token', action.payload.token);\r\n        localStorage.setItem('user', JSON.stringify(action.payload.user));\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = typeof action.payload === 'string' ? action.payload : 'Registration failed';\r\n        state.isAuthenticated = false;\r\n      })\r\n      // Fetch profile\r\n      .addCase(fetchUserProfile.pending, (state) => { state.loading = true; state.error = null; })\r\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        state.isAuthenticated = true;\r\n        localStorage.setItem('user', JSON.stringify(action.payload));\r\n      })\r\n      .addCase(fetchUserProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = typeof action.payload === 'string' ? action.payload : 'Failed to fetch profile';\r\n        state.token = null;\r\n        state.isAuthenticated = false;\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout, clearError, setUser } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}