{"ast":null,"code":"import axios from 'axios';\n// Create Axios instance\nexport const api = axios.create({\n  baseURL: 'http://localhost:3000',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Set token globally if exists\nconst token = localStorage.getItem('token');\nif (token) {\n  api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\nexport const authService = {\n  login: async loginData => {\n    var _response$data$data;\n    const response = await api.post('/auth/login', loginData);\n    const token = (_response$data$data = response.data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.token;\n    if (token) {\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    return response.data;\n  },\n  register: async registerData => {\n    var _response$data$data2;\n    const response = await api.post('/auth/register', registerData);\n    const token = (_response$data$data2 = response.data.data) === null || _response$data$data2 === void 0 ? void 0 : _response$data$data2.token;\n    if (token) {\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n  },\n  isAuthenticated: () => !!localStorage.getItem('token'),\n  getToken: () => localStorage.getItem('token')\n};","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","token","localStorage","getItem","defaults","common","authService","login","loginData","_response$data$data","response","post","data","setItem","register","registerData","_response$data$data2","getProfile","get","logout","removeItem","isAuthenticated","getToken"],"sources":["C:/Users/sekne/OneDrive/Desktop/Veterinary-Clinic/services/front-end/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User, LoginData, RegisterData } from '../models/User';\r\n\r\n// Create Axios instance\r\nexport const api = axios.create({\r\n  baseURL: 'http://localhost:3000',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Set token globally if exists\r\nconst token = localStorage.getItem('token');\r\nif (token) {\r\n  api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: {\r\n    user: User;\r\n    token: string;\r\n  };\r\n}\r\n\r\nexport const authService = {\r\n  login: async (loginData: LoginData): Promise<AuthResponse> => {\r\n    const response = await api.post<AuthResponse>('/auth/login', loginData);\r\n\r\n    const token = response.data.data?.token;\r\n    if (token) {\r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    return response.data;\r\n  },\r\n\r\n  register: async (registerData: RegisterData): Promise<AuthResponse> => {\r\n    const response = await api.post<AuthResponse>('/auth/register', registerData);\r\n\r\n    const token = response.data.data?.token;\r\n    if (token) {\r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    return response.data;\r\n  },\r\n\r\n  getProfile: async (): Promise<{ success: boolean; data: { user: User } }> => {\r\n    const response = await api.get<{ success: boolean; data: { user: User } }>('/auth/profile');\r\n    return response.data;\r\n  },\r\n\r\n  logout: (): void => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n  },\r\n\r\n  isAuthenticated: (): boolean => !!localStorage.getItem('token'),\r\n\r\n  getToken: (): string | null => localStorage.getItem('token'),\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB;AACA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC9BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAC3C,IAAIF,KAAK,EAAE;EACTL,GAAG,CAACQ,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUJ,KAAK,EAAE;AAClE;AAWA,OAAO,MAAMK,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,SAAoB,IAA4B;IAAA,IAAAC,mBAAA;IAC5D,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAe,aAAa,EAAEH,SAAS,CAAC;IAEvE,MAAMP,KAAK,IAAAQ,mBAAA,GAAGC,QAAQ,CAACE,IAAI,CAACA,IAAI,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAoBR,KAAK;IACvC,IAAIA,KAAK,EAAE;MACTC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;MACpCL,GAAG,CAACQ,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUJ,KAAK,EAAE;IAClE;IAEA,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDE,QAAQ,EAAE,MAAOC,YAA0B,IAA4B;IAAA,IAAAC,oBAAA;IACrE,MAAMN,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAe,gBAAgB,EAAEI,YAAY,CAAC;IAE7E,MAAMd,KAAK,IAAAe,oBAAA,GAAGN,QAAQ,CAACE,IAAI,CAACA,IAAI,cAAAI,oBAAA,uBAAlBA,oBAAA,CAAoBf,KAAK;IACvC,IAAIA,KAAK,EAAE;MACTC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;MACpCL,GAAG,CAACQ,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUJ,KAAK,EAAE;IAClE;IAEA,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDK,UAAU,EAAE,MAAAA,CAAA,KAAiE;IAC3E,MAAMP,QAAQ,GAAG,MAAMd,GAAG,CAACsB,GAAG,CAA6C,eAAe,CAAC;IAC3F,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDO,MAAM,EAAEA,CAAA,KAAY;IAClBjB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;IAChC,OAAOxB,GAAG,CAACQ,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAAC,eAAe,CAAC;EACrD,CAAC;EAEDgB,eAAe,EAAEA,CAAA,KAAe,CAAC,CAACnB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE/DmB,QAAQ,EAAEA,CAAA,KAAqBpB,YAAY,CAACC,OAAO,CAAC,OAAO;AAC7D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}