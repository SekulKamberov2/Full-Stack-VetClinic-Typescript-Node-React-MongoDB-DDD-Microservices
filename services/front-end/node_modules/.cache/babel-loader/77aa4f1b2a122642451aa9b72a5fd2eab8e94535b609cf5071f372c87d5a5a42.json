{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { api } from '../services/authService';\nconst initialState = {\n  users: [],\n  loading: false,\n  error: null\n};\nexport const fetchUsers = createAsyncThunk('users/fetchAll', async (_, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    const token = getState().auth.token || localStorage.getItem('token');\n    console.log('token', token);\n    const res = await api.get('/patients', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log('patients', res.data);\n    return res.data.data;\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load patients');\n  }\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = action.payload;\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload || 'Failed to fetch users';\n    });\n  }\n});\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","initialState","users","loading","error","fetchUsers","_","rejectWithValue","getState","token","auth","localStorage","getItem","console","log","res","get","headers","Authorization","data","err","_err$response","_err$response$data","response","message","usersSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/sekne/OneDrive/Desktop/Veterinary-Clinic/services/front-end/src/store/usersSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { api } from '../services/authService';\r\nimport { User } from '../models/User';\r\nimport { RootState } from '../store';\r\n\r\ninterface UsersState {\r\n  users: User[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: UsersState = {\r\n  users: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const fetchUsers = createAsyncThunk<User[], void, { state: RootState }>(\r\n  'users/fetchAll',\r\n  async (_, { rejectWithValue, getState }) => {\r\n    try {\r\n      const token = getState().auth.token || localStorage.getItem('token');\r\n      console.log('token', token)\r\n      const res = await api.get<{ success: boolean; data: User[] }>('/patients', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      console.log('patients', res.data);\r\n      return res.data.data;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.response?.data?.message || 'Failed to load patients');\r\n    }\r\n  }\r\n);\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.users = action.payload;\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = (action.payload as string) || 'Failed to fetch users';\r\n      });\r\n  },\r\n});\r\n\r\nexport default usersSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,GAAG,QAAQ,yBAAyB;AAU7C,MAAMC,YAAwB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,gBAAgB,EAChB,OAAOO,CAAC,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK,IAAIE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACpEC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC3B,MAAMM,GAAG,GAAG,MAAMf,GAAG,CAACgB,GAAG,CAAqC,WAAW,EAAE;MACzEC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUT,KAAK;MAChC;IACF,CAAC,CAAC;IAEFI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,GAAG,CAACI,IAAI,CAAC;IACjC,OAAOJ,GAAG,CAACI,IAAI,CAACA,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAQ,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACjB,OAAOf,eAAe,CAAC,EAAAc,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,yBAAyB,CAAC;EAClF;AACF,CACF,CAAC;AAED,MAAMC,UAAU,GAAG3B,WAAW,CAAC;EAC7B4B,IAAI,EAAE,OAAO;EACbzB,YAAY;EACZ0B,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACzB,UAAU,CAAC0B,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAAC7B,OAAO,GAAG,IAAI;MACpB6B,KAAK,CAAC5B,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACD0B,OAAO,CAACzB,UAAU,CAAC4B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAAC7B,OAAO,GAAG,KAAK;MACrB6B,KAAK,CAAC9B,KAAK,GAAGgC,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACzB,UAAU,CAAC+B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAAC7B,OAAO,GAAG,KAAK;MACrB6B,KAAK,CAAC5B,KAAK,GAAI8B,MAAM,CAACC,OAAO,IAAe,uBAAuB;IACrE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeV,UAAU,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}